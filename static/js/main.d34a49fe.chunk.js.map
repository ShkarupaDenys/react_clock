{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","name","props","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","hideClockHandler","e","preventDefault","showClockHandler","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAG3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAbP,kCAgBE,WACEC,cAAcR,KAAKD,WAjBvB,oBAoBE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCF,IAEhC,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAMS,cAAcC,OAAO,IAAK,YA/B3C,GAA2BK,aCN3B,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GAQX,IAAMG,EAAb,4MACErB,MAAQ,CACNsB,UAAW,UACXC,UAAU,GAHd,EAMEpB,QAAU,EANZ,EAoCEqB,iBAAmB,SAACC,GAClBA,EAAEC,iBAEF,EAAKnB,SAAS,CAAEgB,UAAU,IAC1BX,cAAc,EAAKT,UAxCvB,EA2CEwB,iBAAmB,WACjB,EAAKpB,SAAS,CAAEgB,UAAU,IAC1B,EAAKpB,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEe,UAAWL,QAC1B,OA/CP,uDAQE,WAAqB,IAAD,OAClBb,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEe,UAAWL,QAC1B,MAEHW,SAASC,iBAAiB,eAAe,SAAAJ,GAAC,OAAI,EAAKD,iBAAiBC,MACpEG,SAASC,iBAAiB,QAASzB,KAAKuB,oBAd5C,gCAiBE,SACEG,EACAC,GAEA,IAAQT,EAAclB,KAAKJ,MAAnBsB,UAEJA,IAAcS,EAAUT,WAE1Bd,QAAQwB,MAAR,uBAA8BD,EAAUT,UAAxC,eAAwDA,MAzB9D,kCA6BE,WACEM,SAASK,oBAAoB,cAAe7B,KAAKoB,kBACjDI,SAASK,oBAAoB,QAAS7B,KAAKuB,kBAE3Cf,cAAcR,KAAKD,WAjCvB,oBAkDE,WACE,MAAgCC,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,UAElB,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOV,KAAMS,WAzDlC,GAAyBN,aCZzBkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.d34a49fe.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', e => this.hideClockHandler(e));\n    document.addEventListener('click', this.showClockHandler);\n  }\n\n  componentDidUpdate(\n    _prevProps: Readonly<{}>,\n    prevState: Readonly<State>,\n  ) {\n    const { clockName } = this.state;\n\n    if (clockName !== prevState.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClockHandler);\n    document.removeEventListener('click', this.showClockHandler);\n\n    clearInterval(this.timerId);\n  }\n\n  hideClockHandler = (e: MouseEvent) => {\n    e.preventDefault();\n\n    this.setState({ hasClock: false });\n    clearInterval(this.timerId);\n  };\n\n  showClockHandler = () => {\n    this.setState({ hasClock: true });\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}